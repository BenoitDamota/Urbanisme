<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_field_8h" kind="file" language="C++">
    <compoundname>Field.h</compoundname>
    <includes local="no">list</includes>
    <includes local="no">vector</includes>
    <includes refid="coordinates_8h" local="yes">coordinates.h</includes>
    <includedby refid="_field_8cpp" local="yes">Engine/Field.cpp</includedby>
    <includedby refid="test__next__coordinates_8h" local="yes">Engine/Tests/test_next_coordinates.h</includedby>
    <includedby refid="fieldtestfixture_8h" local="yes">Engine/Tests/fieldtestfixture.h</includedby>
    <includedby refid="_resolution_8h" local="yes">Resolution.h</includedby>
    <includedby refid="_sim-_city_8cpp" local="yes">Sim-City.cpp</includedby>
    <includedby refid="minpathroadtestfixture_8cpp" local="yes">Tests/minpathroadtestfixture.cpp</includedby>
    <incdepgraph>
      <node id="41">
        <label>list</label>
      </node>
      <node id="46">
        <label>cmath</label>
      </node>
      <node id="45">
        <label>cassert</label>
      </node>
      <node id="42">
        <label>vector</label>
      </node>
      <node id="40">
        <label>Engine/Field.h</label>
        <link refid="Field.h"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>iostream</label>
      </node>
      <node id="47">
        <label>algorithm</label>
      </node>
      <node id="43">
        <label>coordinates.h</label>
        <link refid="coordinates_8h_source"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50">
        <label>Engine/Tests/fieldtestfixture.h</label>
        <link refid="fieldtestfixture_8h_source"/>
      </node>
      <node id="49">
        <label>Engine/Tests/test_next_coordinates.h</label>
        <link refid="test__next__coordinates_8h_source"/>
      </node>
      <node id="48">
        <label>Engine/Field.h</label>
        <link refid="Field.h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>Resolution.h</label>
        <link refid="_resolution_8h_source"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>Tests/minpathroadtestfixture.h</label>
        <link refid="minpathroadtestfixture_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_field" prot="public">Field</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_field_8h_1a5d74787dedbc4e11c1ab15bf487e61f8" prot="public" static="no">
        <name>State</name>
        <enumvalue id="_field_8h_1a5d74787dedbc4e11c1ab15bf487e61f8af879ae0b2c6d15a017ef2819e64fb4de" prot="public">
          <name>is_undefined</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_field_8h_1a5d74787dedbc4e11c1ab15bf487e61f8ae6b4dbad2531a7a25576e29a1170afb9" prot="public">
          <name>is_road</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_field_8h_1a5d74787dedbc4e11c1ab15bf487e61f8a73a26f02824ff1a89659c1963855dfd7" prot="public">
          <name>is_usable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_field_8h_1a5d74787dedbc4e11c1ab15bf487e61f8a95c4d103be86e4d887e4c6c0cce2f5d3" prot="public">
          <name>is_unusable</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/Field.h" line="8" column="1" bodyfile="Engine/Field.h" bodystart="8" bodyend="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;coordinates.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>State{is_undefined=<sp/>-1,<sp/>is_road,<sp/>is_usable,<sp/>is_unusable};</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_field" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_field" kindref="compound">Field</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nb_cols,<sp/>nb_rows;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;Coordinates&gt;<sp/>ins_outs;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;State&gt;&gt;<sp/>parcels;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_field" kindref="compound">Field</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height</highlight><highlight class="comment">/*,<sp/>std::list&lt;<sp/>Coordinates<sp/>&gt;&amp;<sp/>inputs_and_ouputs<sp/>=<sp/>*(new<sp/>std::list&lt;Coordinates&gt;())<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_field" kindref="compound">Field</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>Getters<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>get_width()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_cols;<sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>get_height()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_rows;<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>getNbParcels()</highlight><highlight class="keyword"><sp/>const<sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nb_cols<sp/>*<sp/>nb_rows;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*===<sp/>Setters<sp/>===*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_width(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>width)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>nb_cols<sp/>=<sp/><sp/>width;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_height(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>height)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>nb_rows<sp/>=<sp/><sp/>height;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//private:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a6baa2ec69d89a224f2cf96af8eac9250" kindref="member">resizeWithDimensions</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48" refid="class_field_1a646c0e7d9c66c86b776b349eb9e08449" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a646c0e7d9c66c86b776b349eb9e08449" kindref="member">add_in_out</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>ins_outs.push_back(coord);<sp/>}</highlight></codeline>
<codeline lineno="55" refid="class_field_1a9d9b3de65984659c77ee86918362f4f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a9d9b3de65984659c77ee86918362f4f8" kindref="member">add_in_out</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>row)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>ins_outs.push_back(<ref refid="class_coordinates" kindref="compound">Coordinates</ref>(col,<sp/>row));<sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="class_field_1a5db3ca54219102e50ff4d9e0b9753d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a5db3ca54219102e50ff4d9e0b9753d0b" kindref="member">add_road</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>row)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>parcels[row][col]=<sp/>is_road;<sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="73" refid="class_field_1a6dda638994b360483e67514a9ede9f15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>State<sp/><ref refid="class_field_1a6dda638994b360483e67514a9ede9f15" kindref="member">at</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels[pos.row][pos.col];<sp/>}</highlight></codeline>
<codeline lineno="80" refid="class_field_1a9a7a478e7f5d978e181b7fca88ddad3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>State<sp/><ref refid="class_field_1a9a7a478e7f5d978e181b7fca88ddad3c" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels[pos.row][pos.col];<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_field_1a0b3e16dd4a4591025f0804e28c055ed4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::const_iterator<sp/><ref refid="class_field_1a0b3e16dd4a4591025f0804e28c055ed4" kindref="member">begin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels.cbegin();<sp/>}</highlight></codeline>
<codeline lineno="93" refid="class_field_1a83fc4c16a08cb4f8821baa02a93919f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::const_iterator<sp/><ref refid="class_field_1a83fc4c16a08cb4f8821baa02a93919f6" kindref="member">end</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels.cend();<sp/>}</highlight></codeline>
<codeline lineno="99" refid="class_field_1a26b4af177a6fc1f44c1eb6d134d93e8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::iterator<sp/><ref refid="class_field_1a26b4af177a6fc1f44c1eb6d134d93e8b" kindref="member">begin</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels.begin();<sp/>}</highlight></codeline>
<codeline lineno="105" refid="class_field_1a7c2df079326a7a28ab5e664acce0e80a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::iterator<sp/><ref refid="class_field_1a7c2df079326a7a28ab5e664acce0e80a" kindref="member">end</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parcels.end();<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>friend<sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::const_iterator<sp/>begin(const<sp/>Field&amp;<sp/>f)<sp/>{<sp/>return<sp/>f.begin();<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>friend<sp/>std::vector&lt;std::vector&lt;State&gt;&gt;::const_iterator<sp/>end(const<sp/>Field&amp;<sp/>f)<sp/>{<sp/>return<sp/>f.end();<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::vector&lt;State&gt;::const_iterator&amp;<sp/>std::vector&lt;State&gt;::const_iterator::operator++();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_field_1aed3a78975e6a28b6f32be7c7f1a9e983" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/><ref refid="class_field_1aed3a78975e6a28b6f32be7c7f1a9e983" kindref="member">first</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>(0,0));<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Affichage<sp/>*/</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a400b4301fd5d8286827a1032fcd74ec1" kindref="member">show_ins_and_outs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1ac8967b315219b2f8bc7728028e08c348" kindref="member">show_states</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_field_1a076fac595112044eb8acd3321a1077af" kindref="member">contains</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_field_1a076fac595112044eb8acd3321a1077af" kindref="member">contains</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_field_1a1be958fe3bee4fca95b1cd10e85283a8" kindref="member">nextCoordinates</ref><sp/>(<sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>*<sp/>coord<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1ab3e49fecc6c0c5eed1d07b761f35b8ba" kindref="member">generateInsAndOuts</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nb);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRoadAndNeighbourOf(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>neighbour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>servingDistance)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;Coordinates&gt;<sp/>*<ref refid="class_field_1ab7f0de6f1ee4d0a45b8d4946783d8738" kindref="member">getNeighbourRoads</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>std::list&lt;Coordinates&gt;<sp/>*<ref refid="class_field_1ad38e9b89a990280215681e53798ccc70" kindref="member">getServingRoads</ref><sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>servingDistance<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasServingRoad<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_coordinates" kindref="compound">Coordinates</ref>&amp;<sp/>coord,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>servingDistance<sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a32d5e1cef872d4bc1b0c5edc8e1693bd" kindref="member">defineUsables</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>servingDistance);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a6be516dfe903d18d047983c044eda493" kindref="member">generateRandomSolution</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_field_1a7ef9953a89e48972a0b6ba2652707911" kindref="member">deleteUselessRoad</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="Engine/Field.h"/>
  </compounddef>
</doxygen>

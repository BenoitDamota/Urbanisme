<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_coordinates" kind="class" language="C++" prot="public">
    <compoundname>Coordinates</compoundname>
    <includes refid="coordinates_8h" local="no">coordinates.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_coordinates_1a4d1e2bdd28dfd0a047e4b1f9fcb04a31" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Coordinates::col</definition>
        <argsstring></argsstring>
        <name>col</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="14" column="1" bodyfile="Engine/coordinates.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_coordinates_1aa3e522bbc0eab18fe35a7b17186df35e" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Coordinates::row</definition>
        <argsstring></argsstring>
        <name>row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="15" column="1" bodyfile="Engine/coordinates.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_coordinates_1a94259eaa33fbd1aa8da205266a407bc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Coordinates::Coordinates</definition>
        <argsstring>(int _x, int _y)</argsstring>
        <name>Coordinates</name>
        <param>
          <type>int</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="18" column="1" bodyfile="Engine/coordinates.cpp" bodystart="4" bodyend="6"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1ac5d41909a5b219ee3dbec3699039c562" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Coordinates::Coordinates</definition>
        <argsstring>(const Coordinates &amp;other)</argsstring>
        <name>Coordinates</name>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="19" column="1" bodyfile="Engine/coordinates.cpp" bodystart="8" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1add7d735f38950ba96dcc3f9ebfac7870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Coordinates::~Coordinates</definition>
        <argsstring>()</argsstring>
        <name>~Coordinates</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="20" column="1" bodyfile="Engine/coordinates.cpp" bodystart="12" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1a32cfc159461df761e9603e92ffab5ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
        <definition>Coordinates &amp; Coordinates::operator=</definition>
        <argsstring>(const Coordinates &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="22" column="1" bodyfile="Engine/coordinates.cpp" bodystart="17" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1a333d88139e6f92cf7c729278430173ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Coordinates::operator==</definition>
        <argsstring>(const Coordinates &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="24" column="1" bodyfile="Engine/coordinates.cpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1a87790bcf7798d62e73df4947e9a38410" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; Coordinates::print</definition>
        <argsstring>(std::ostream &amp;out) const </argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="27" column="1" bodyfile="Engine/coordinates.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1addd99c33f1c15c4fd21a4e54f5607abf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned Coordinates::manhattanDistance</definition>
        <argsstring>(const Coordinates &amp;other) const </argsstring>
        <name>manhattanDistance</name>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calcul de la distance Manhattan entre deux points <simplesect kind="return"><para>distance manhattan : entier non signé </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="36" column="1" bodyfile="Engine/coordinates.cpp" bodystart="36" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_coordinates_1acdfe893588fc29d44ea654e18424acbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Coordinates::euclideanDistance</definition>
        <argsstring>(const Coordinates &amp;other) const </argsstring>
        <name>euclideanDistance</name>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calcul de la distance euclidienne entre deux points <simplesect kind="return"><para>distance euclidienne : flottant non signé </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="41" column="1" bodyfile="Engine/coordinates.cpp" bodystart="42" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_coordinates_1a268a38d2e3e1406f2fd52bf82e467110" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const Coordinates &amp;coord)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="class_coordinates" kindref="compound">Coordinates</ref> &amp;</type>
          <declname>coord</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Engine/coordinates.h" line="28" column="1" bodyfile="Engine/coordinates.h" bodystart="28" bodyend="29"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Normalement inutile, permet de ne pas utilise -lm lors compilation </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Engine/coordinates.h" line="11" column="1" bodyfile="Engine/coordinates.h" bodystart="10" bodyend="43"/>
    <listofallmembers>
      <member refid="class_coordinates_1a4d1e2bdd28dfd0a047e4b1f9fcb04a31" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>col</name></member>
      <member refid="class_coordinates_1a94259eaa33fbd1aa8da205266a407bc7" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>Coordinates</name></member>
      <member refid="class_coordinates_1ac5d41909a5b219ee3dbec3699039c562" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>Coordinates</name></member>
      <member refid="class_coordinates_1acdfe893588fc29d44ea654e18424acbd" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>euclideanDistance</name></member>
      <member refid="class_coordinates_1addd99c33f1c15c4fd21a4e54f5607abf" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>manhattanDistance</name></member>
      <member refid="class_coordinates_1a268a38d2e3e1406f2fd52bf82e467110" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_coordinates_1a32cfc159461df761e9603e92ffab5ea2" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>operator=</name></member>
      <member refid="class_coordinates_1a333d88139e6f92cf7c729278430173ce" prot="public" virt="virtual"><scope>Coordinates</scope><name>operator==</name></member>
      <member refid="class_coordinates_1a87790bcf7798d62e73df4947e9a38410" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>print</name></member>
      <member refid="class_coordinates_1aa3e522bbc0eab18fe35a7b17186df35e" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>row</name></member>
      <member refid="class_coordinates_1add7d735f38950ba96dcc3f9ebfac7870" prot="public" virt="non-virtual"><scope>Coordinates</scope><name>~Coordinates</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

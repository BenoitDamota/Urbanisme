.TH "FieldWidget" 3 "Jeudi 19 Mai 2016" "Version 1.0" "Urbanisme" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FieldWidget \- Widget d'affichage de l'automate cellulaire\&. Ce composant permet de suivre graphiquement l'évolution de l'automate\&. Il utilise un système de buffering et s'appuie sur la classe Foret du moteur\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <fieldview\&.hpp>\fP
.PP
Est dérivée de QWidget\&.
.SS "Connecteurs publics"

.in +1c
.ti -1c
.RI "void \fBrazRubber\fP ()"
.br
.in -1c
.SS "Fonctions membres publiques"

.in +1c
.ti -1c
.RI "\fBField\fP * \fBget_field\fP ()"
.br
.ti -1c
.RI "void \fBset_field\fP (\fBField\fP *_field)"
.br
.ti -1c
.RI "void \fBdrawSelecteds\fP ()"
.br
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "\fBFieldWidget\fP (\fBField\fP *_field, unsigned _serveDistance)"
.br
.in -1c
.in -1c
.in +1c
.ti -1c
.RI "void \fBdrawField\fP ()"
.br
.ti -1c
.RI "void \fBdrawChanged\fP ()"
.br
.ti -1c
.RI "void \fBredraw\fP ()"
.br
.in -1c
.in +1c
.ti -1c
.RI "void \fBmousePressEvent\fP (QMouseEvent *event)"
.br
.ti -1c
.RI "void \fBmouseMoveEvent\fP (QMouseEvent *event)"
.br
.ti -1c
.RI "void \fBresizeEvent\fP (QResizeEvent *event)"
.br
.ti -1c
.RI "void \fBpaintEvent\fP (QPaintEvent *event)"
.br
.in -1c
.SH "Description détaillée"
.PP 
Widget d'affichage de l'automate cellulaire\&. Ce composant permet de suivre graphiquement l'évolution de l'automate\&. Il utilise un système de buffering et s'appuie sur la classe Foret du moteur\&. 
.SH "Documentation des constructeurs et destructeur"
.PP 
.SS "FieldWidget::FieldWidget (\fBField\fP * _field, unsigned _serveDistance)"
Constructeur à partir d'une surface déjà crée\&. Initialise les différents pointeurs et fixe la taille minimale du widget 
.PP
\fBParamètres:\fP
.RS 4
\fI_field\fP Surface associée au widget, c'est elle qui est affichée 
.br
\fI_serveDistance\fP Distance de desserte des routes
.RE
.PP
.SS ""
.PP
Constructeurs et destructeurs 
.SS ""

.SH "Documentation des fonctions membres"
.PP 
.SS "void FieldWidget::drawChanged ()"
Redessine les cellules qui ont changés d'état seulement 
.SS "void FieldWidget::drawField ()"
Dessine toutes les cellules dans le buffer 
.SS "void FieldWidget::drawSelecteds ()"
Dessine les cellules sélectionnées 
.SS "\fBField\fP* FieldWidget::get_field ()\fC [inline]\fP"
Accesseur sur la surface affichée 
.PP
\fBRenvoie:\fP
.RS 4
Un \fBField\fP, modifiable 
.RE
.PP

.SS "void FieldWidget::mousePressEvent (QMouseEvent * event)\fC [protected]\fP"
initRubber(event); 
.SS "void FieldWidget::razRubber ()\fC [inline]\fP, \fC [slot]\fP"
Réinitialise le rubber 
.SS "void FieldWidget::redraw ()"
Vide le buffer et rafraichit l'affichage 
.SS "void FieldWidget::set_field (\fBField\fP * _field)\fC [inline]\fP"
Mutateur sur la surface à afficher 
.PP
\fBParamètres:\fP
.RS 4
\fI_field\fP Nouvelle surface à afficher 
.RE
.PP


.SH "Auteur"
.PP 
Généré automatiquement par Doxygen pour Urbanisme à partir du code source\&.
